---
interface Props {
	skills: Array<{
        logo: string;
        alt: string;
        level: number;
    }>;
}

const { skills } = Astro.props;
---

<div class="allSkills">
    {skills.map((skill) => (
        <div class="skill animate" style={`background-image: conic-gradient(rgb(0, 255, 170) ${(skill.level / 100) * 360}deg, rgba(32, 32, 32, 0.6) ${(skill.level / 100) * 360}deg 360deg)`} >
            <img src={skill.logo} alt={skill.alt} loading="lazy"/>
        </div>
    ))}
</div>

<style>
    .allSkills {
        width: 50vw;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-wrap: wrap;
        @media (max-width: 600px) {
            width: 90%;
        }
    }

    .skill {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        padding: 0.1rem;
        margin: 1rem;
        display: flex;
        justify-content: center;
        align-items: center;
        transition: margin 0.3s, padding 0.3s;
        cursor: pointer;
        @media (max-width: 600px) {
            width: 50px;
            height: 50px;
            margin: 0.5rem;
            padding: 1rem;
        }
    }
    .skill:hover {
        @media (min-width: 600px) {
            margin: 0.1rem;
            padding: 1rem;
        }
    }
    .skill > div {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        background-color: rgba(0, 0, 0, 1);
        display: flex;
        justify-content: center;
        align-items: center;
    }
    .skill > div > p {
        font-size: 1.5rem;
        color: white;
        text-align: center;
    }
    .skill > img {
        background-color: rgba(0, 0, 0, 1);
        width: 90px;
        height: 90px;
        padding: 10px;
        border-radius: 50%;
        @media (max-width: 600px) {
            width: 60px;
            height: 60px;
            padding: 5px;
        }
    }
</style>
