---
interface Props {
	skills: Array<{
        logo: string;
        alt: string;
        level: number;
    }>;
}

const { skills } = Astro.props;
---

<div class="allSkills">
    {skills.map((skill) => (
        <div class="skill animate" style={`background-image: conic-gradient(rgb(0, 124, 83) 0deg, rgb(0, 182, 121) ${(skill.level / 100) * 360}deg, rgba(32, 32, 32, 0.5) ${(skill.level / 100) * 360}deg 360deg)`} >
            <img src={skill.logo} alt={skill.alt} loading="lazy"/>
        </div>
    ))}
</div>

<style>
    .allSkills {
        width: 55vw;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-wrap: wrap;
        @media (max-width: 600px) {
            width: 90vw;
        }
        @media (max-width: 1200px) {
            width: 80vw;
        }
    }
    .skill {
        width: 100px;
        height: 100px;
        border-radius: 25%;
        margin: 1.2rem;
        padding: 1px;
        display: flex;
        justify-content: center;
        align-items: center;
        transition: margin 0.3s, padding 0.3s;
        cursor: pointer;
        @media (max-width: 600px) {
            width: 70px;
            height: 70px;
            margin: 0.6rem;
            padding: 0.4rem;
        }
    }
    .skill:hover {
        @media (min-width: 600px) {
            margin: 0.6rem;
            /* margin-left: 1.2rem;
            margin-right: 1.2rem; */
            padding: calc(0.6rem + 1px);
        }
    }
    .skill > img {
        background-color: rgba(0, 0, 0, 1);
        width: 80px;
        height: 80px;
        padding: 10px;
        border-radius: 25%;
        @media (max-width: 600px) {
            width: 60px;
            height: 60px;
            padding: 5px;
        }
    }
</style>
