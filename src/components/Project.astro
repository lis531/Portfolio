---
interface Props {
    title: string;
    date: string;
    img: string;
    href: string;
}

const { title, date, img, href } = Astro.props;
---

<button class="grid-element" id={title} style={`grid-area: ${title}`}>
    <div>
        <div class="inset">
            <img src={img} alt={img} id={`button-img-${title}`} data-view-transition-name={`img-${title}`}>
            <span>
                <p>{title}</p>
                <p style="color: gray;">{date}</p>
            </span>
        </div>
    </div>
    <a href={href}>
        View Production
    </a>
</button>
<!-- <dialog id={`dialog-${title}`} class="dialog">
    <div>
        <img src={img} alt={img} id={`dialog-img-${title}`} style="width: 100%; height: 100%; object-fit: cover; border-radius: 1.5rem;" data-view-transition-name={`img-${title}`}>
        <h1>{title}</h1>
        <p>Click the button below to view the production.</p>
        <a href={href}>
            View Production
        </a>
    </div>
</dialog> -->
<!-- <script>
    const gridElements = document.querySelectorAll('.grid-element');
    gridElements.forEach(element => {
        element.addEventListener('click', (e) => {
            const target = e.currentTarget;
            const dialog = document.getElementById(`dialog-${target.id}`);

            dialog.classList.add('fade-in');
            dialog.showModal();
            document.body.style.overflow = 'hidden';

            document.body.addEventListener('click', (e) => {
                if (e.target === dialog) {
                    dialog.classList.remove('fade-in');
                    dialog.classList.add('fade-out');
                    setTimeout(() => {
                        dialog.close();
                        dialog.classList.remove('fade-out');
                        document.body.style.overflow = 'auto';
                    }, 300);
                }
            });
        });
    });
</script> -->

<style>
    .dialog {
        z-index: 100;
        background-color: rgba(0, 0, 0, 0.75);
        color: white;
        text-align: center;
        width: 40%;
        border: none;
        border-radius: 1.5rem;
        box-shadow: 0 0 15px 5px rgba(0, 0, 0, 0.5);
        padding: 0;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .dialog.fade-in {
        opacity: 1;
    }

    .dialog.fade-out {
        opacity: 0;
    }

    dialog > div {
        border: 3px solid rgba(24, 24, 24, 1);
        padding: 1.5rem;
        border-radius: 1.5rem;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 1rem;
    }
    dialog > div > a {
        display: block;
        background-color: rgba(14, 14, 14, 1);
        border-radius: 1.5rem;
        color: white;
        text-decoration: none;
        text-align: center;
        width: 100%;
        padding: 1vh 0;
    }
    dialog > div > img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 1.5rem;
    }
    dialog::backdrop {
        background-color: rgba(0, 0, 0, 0.75);
        backdrop-filter: blur(10px);
    }
    .grid-element > div {
        height: 100%;
        z-index: 10;
    }
    .inset {
        width: 100%;
        height: 100%;
        box-shadow: inset 0px -70px 20px -20px rgba(0, 0, 0, 0.75);
        position: relative;
        border-radius: 1.5rem;
        padding: 2px;
    }
    span {
        display: flex;
        align-items: center;
        justify-content: space-between;
        position: absolute;
        width: -webkit-fill-available;
        bottom: 1rem;
        margin: 0 1rem;
    }
    p {
        font-size: 26px;
        color: white;
        text-align: center;
        margin: 0;
    }
    .grid-element {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        border: 3px solid rgba(24, 24, 24, 1);
        border-radius: 1.5rem;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        overflow: hidden;
        padding: 0.7rem;
        gap: 1vh;
        font-family: inherit;
        background-color: inherit;
        cursor: pointer;
    }
    .grid-element > a {
        background-color: rgba(14, 14, 14, 1);
        border-radius: 1.5rem;
        color: white;
        text-decoration: none;
        text-align: center;
        width: 100%;
        padding: 1vh 0;
    } 
    img {
        position: relative;
        width: inherit;
        height: inherit;
        object-fit: cover;
        border-radius: 1.5rem;
        filter: blur(1px);
        z-index: -1;
    }
</style>