---
import Layout from '../layouts/Layout.astro';
import Project from '../components/Project.astro';
import NavBar from '../components/NavBar.astro';
import MySkills from '../components/MySkills.astro';
---

<script>
	const observer = new IntersectionObserver((entries) => {
		entries.forEach((entry) => {
			if (entry.isIntersecting && !entry.target.classList.contains('animated')) {
				if (entry.target.tagName.toLowerCase() === 'mark') {
					entry.target.classList.add('animate-mark');
				} else {
					entry.target.animate([
						{ opacity: 0, transform: 'translateY(100px)' },
						{ opacity: 1, transform: 'translateY(0)' }
					], {
						duration: 500,
						easing: 'ease-out',
						fill: 'forwards'
					}).finished.then(() => {
						entry.target.classList.add('animated');
					});
				}
			}
		});
	});

	const images = document.querySelectorAll('.hidden');
    images.forEach((img) => {
        img.addEventListener('load', () => {
            img.animate([
                { opacity: 0, filter: 'blur(10px)' },
                { opacity: 1, filter: 'blur(1px)' }
            ], 500).finished.then(() => {
                img.classList.remove('hidden');
            });
        });
    });

	const gridElements = document.querySelectorAll('.grid-element') as NodeListOf<HTMLElement>;
	gridElements.forEach((element) => {
		observer.observe(element);
	});

	const animateElements = document.querySelectorAll('.animate') as NodeListOf<HTMLElement>;
	animateElements.forEach((element) => {
		observer.observe(element);
	});

	const marks = document.querySelectorAll('mark');
	marks.forEach((mark) => {
		observer.observe(mark);
	});

	const light = document.querySelector('.light') as HTMLElement;
	document.addEventListener('mousemove', (e) => {
		const x = e.clientX / window.innerWidth;
		const y = e.clientY / window.innerHeight;
		light.style.background = `radial-gradient(circle at ${x * 100}% ${y * 100}%, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.8) 20%)`;
	});

	const parallax = document.querySelector('.parallax') as HTMLElement;
	document.addEventListener('scroll', () => {
        const scrollPosition = window.scrollY;
        const yPos = scrollPosition * 0.3;
        parallax.style.backgroundPosition = `center ${-yPos}px`;
    });

	document.addEventListener('DOMContentLoaded', () => {
        (document.querySelector('footer') as HTMLElement).textContent = new Date().getFullYear().toString() + ' © Borys Gajewski';
    });
</script>

<Layout title="Borys Gajewski">
	<main id="home">
		<div class="parallax"></div>
		<div class="overlay"></div>
		<div class="light"></div>
		<NavBar />
		<div class="space">
			<h1 class="animate">About me</h1>
			<p class="animate">My name is <b>Borys Gajewski</b>, and I’m a <mark>developer</mark> from Poland. I create websites, small games, and other programs.</p>
		</div>
		<h1 class="animate">My Skills</h1>
		<MySkills
			skills={[
				{ logo: '/images/Logos/HTML5.svg', alt: "HTML5", level: 95 },
				{ logo: '/images/Logos/CSS.svg', alt: "CSS", level: 90 },
				{ logo: '/images/Logos/JS.svg', alt: "JS", level: 85 },
				{ logo: '/images/Logos/TS.svg', alt: "TS", level: 80 },
				{ logo: '/images/Logos/React.svg', alt: "React", level: 80 },
				{ logo: '/images/Logos/Vue.svg', alt: "Vue", level: 40 },
				{ logo: '/images/Logos/Astro.svg', alt: "Astro", level: 60 },
				{ logo: '/images/Logos/Nodejs.svg', alt: "Node", level: 50 },
				{ logo: '/images/Logos/Firebase.svg', alt: "Firebase", level: 30 },
				{ logo: '/images/Logos/Python.svg', alt: "Python", level: 55 },
				{ logo: '/images/Logos/CPP.svg', alt: "CPP", level: 15 },
				{ logo: '/images/Logos/Csharp.svg', alt: "Csharp", level: 20 },
				{ logo: '/images/Logos/Java.svg', alt: "Java", level: 5 },
				{ logo: '/images/Logos/Unity.svg', alt: "Unity", level: 30 },
				{ logo: '/images/Logos/Unreal.svg', alt: "Unreal", level: 1 },
				{ logo: '/images/Logos/Figma.svg', alt: "Figma", level: 75 }
			]}
		/>
		<div id="projects">
			<h1>My projects</h1>
			<div class="grid">
				<Project
				title="Borufi"
					description='It is my own music library (AKA Spotify). Made using Astro, TS and Firebase.'
					date="January 2024"
					href="https://github.com/lis531/borufi"
					hrefTryOut="https://borufi.netlify.app"
				/>
				<Project
					title="School Projects"
					description='Contains some of my smaller school projects yet when combined it is big enough to upload here. All made using JS.'
					date="2022 - 2024"
					href="https://github.com/lis531/schoolProjects"
					hrefTryOut='https://lis531.github.io/schoolProjects'
				/>
				<Project
					title="TicTacToe"
					description='Simple tic-tac-toe game built with Vue and Vite.'
					date="November 2024"
					href="https://github.com/lis531/Tic-tac-toe"
					hrefTryOut='https://lis531-tic-tac-toe.vercel.app'
				/>
				<Project
					title="TechNews"
					description='It is website created in js that fetches news from www.wired.com and lets you order them or select certain categories. Made as a school project using plain JS.'
					date="June 2023"
					href="https://github.com/lis531/TechNews"
					hrefTryOut='https://lis531.github.io/TechNews'
				/>
				<Project
					title="Image Comparison"
					description='Website for quick image comparison built with Vue and Vite.'
					date="December 2024"
					href="https://github.com/lis531/image-compare"
					hrefTryOut='https://lis531-image-compare.vercel.app/'
				/>
				<Project
					title="Discord Bot"
					description='Discord bot that can play music, queue songs, and more build with Python.'
					date="January 2025"
					href="https://github.com/lis531/DiscordBot"
					hrefTryOut=''
					/>
				<Project
					title="Bargebo Guesser"
					description='A game where you guess the song that is currently playing built with React, Vite and Firebase.'
					date="Mar - Apr 2025"
					href="https://github.com/lis531/bargebo-guesser"
					hrefTryOut='https://bargebo-guesser.vercel.app/'
					/>
				<Project
					title="Spotify Like Script"
					description='Script to like currently playing song with ease. Made with Python.'
					date="July 2025"
					href="https://github.com/lis531/spotify-liked-toggle"
					hrefTryOut=''
					/>
			</div>
		</div>
		<div class="space">
			<h1 class="animate">Contact</h1>
			<div class="contact" id="contact">
				<a class="animate" href="https://x.com/Lisu22361857">Twitter</a>
				<a class="animate" href="mailto:borys.gajewski7@gmail.com">Email</a>
				<a class="animate" href="https://github.com/lis531/">Github</a>
			</div>
		</div>
		<footer>
			{new Date().getFullYear()} &copy; Borys Gajewski
		</footer>
	</main>
</Layout>

<style>
	html {
		scroll-behavior: smooth;
		scrollbar-width: thin;
		scrollbar-color: rgb(255, 255, 255) rgba(0, 0, 0, 0);
	}
	body {
		margin: 0;
		padding: 0;
	}
	main {
		color: white;
		font-size: 20px;
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	.parallax {
		position: fixed;
    	top: 0;
    	left: 0;
    	width: 100%;
    	height: 100%;
	    background-image: url('/images/Background/background.avif');
		background-size: cover;
		filter: brightness(0.3);
		z-index: -102;
		@media (max-width: 1200px) {
			filter: brightness(0.2);
			background-position: 0 !important;
		}
	}
	.overlay {
	    position: fixed;
	    top: 0;
	    left: 0;
	    width: 100%;
	    height: 100%;
	    pointer-events: none;
		background: linear-gradient(to right, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.2) 50%, rgba(0, 0, 0, 1));
		z-index: -101;
		@media (max-width: 1200px) {
			background: linear-gradient(to right, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 1));
		}
	}
	.light {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		pointer-events: none;
		z-index: -100;
		background: rgba(0, 0, 0, 0.8);
		@media (max-width: 1200px) {
			display: none;
		}
	}
	h1 {
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
		background-image: linear-gradient(45deg, #2e99f0, #9b27b0);
		background-clip: text;
		color: transparent;
	}
	mark {
		position: relative;
		background-color: transparent;
	}
	mark::after {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		height: 100%;
		width: 0;
		background-color: yellow;
		z-index: -1;
	}
	mark.animate-mark::after {
		animation: animateMarkBefore 1s .5s forwards;
	}
	@keyframes animateMarkBefore {
		from {
			width: 0;
		}
		to {
			width: 100%;
		}
	}
	#projects[data-astro-cid-j7pv25f6] {
		padding-top: 15vh;
		margin-top: 20vh;
		display: flex;
		flex-direction: column;
		align-items: center;
		@media screen and (max-width: 600px) {
			width: 100%;
		}
    }
	.grid {
	    display: grid;
	    grid-template-columns: repeat(5, 220px);
		grid-template-rows: repeat(10, 220px);
	    max-width: 1250px;
	    gap: 0.7em 0.7em;
	    grid-template-areas: 
	        "Borufi Borufi Borufi SchoolProjects SchoolProjects"
	        "Borufi Borufi Borufi SchoolProjects SchoolProjects"
	        "TicTacToe TicTacToe TechNews TechNews TechNews"
	        "TicTacToe TicTacToe TechNews TechNews TechNews"
	        "TicTacToe TicTacToe ImageComparison ImageComparison ImageComparison"
	        "DiscordBot DiscordBot ImageComparison ImageComparison ImageComparison"
			"DiscordBot DiscordBot BargeboGuesser BargeboGuesser BargeboGuesser"
			"DiscordBot DiscordBot BargeboGuesser BargeboGuesser BargeboGuesser"
			"SpotifyLikeScript SpotifyLikeScript SpotifyLikeScript SpotifyLikeScript SpotifyLikeScript"
			"SpotifyLikeScript SpotifyLikeScript SpotifyLikeScript SpotifyLikeScript SpotifyLikeScript";
	    @media (max-width: 900px) {
	        grid-template-areas: 
	            "Borufi"
	            "SchoolProjects"
	            "TechNews"
	            "TicTacToe"
	            "ImageComparison"
				"DiscordBot"
				"BargeboGuesser";
	        grid-template-rows: repeat(5, 440px);
			grid-template-columns: 1fr;
	        margin: 0 3px;
	    }
		@media screen and (max-width: 600px) {
			grid-template-rows: auto;
		}
	}
	.contact {
		display: flex;
		justify-content: center;
		gap: 5vw;
		padding: 1rem;
		@media screen and (max-width: 1000px) {
			flex-direction: column;
			width: 100%;
		}
	}
	.contact > a {
		text-decoration: none;
		color: white;
		border: 2px solid rgba(72, 72, 72, 1);
		-webkit-backdrop-filter: blur(7px);
		backdrop-filter: blur(7px);
		border-radius: 90pt;
		padding: 0.5rem 5rem;
		text-align: center;
		width: 120px;
		box-shadow: inset 0px 0px 15px 0px rgba(72, 72, 72, 0.5);
		@media screen and (max-width: 1000px) {
			width: auto;
			margin: 0 2rem;
		}
	}
	.space {
		height: 100lvh;
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		& > p {
			margin: 0;
			width: 55vw;
		}
		@media (max-width: 600px) {
			& > p {
				width: 90vw;
			}
			width: 90%;
		}
		@media (max-width: 1200px) {
			& > p {
				width: 80vw;
			}
		}
	}
	footer {
		text-align: center;
		color: white;
		font-size: 24px;
		font-family: Alata, sans-serif;
		margin-bottom: 1rem;
		@media (max-width: 600px) {
			font-size: 16px;
		}
	}
</style>